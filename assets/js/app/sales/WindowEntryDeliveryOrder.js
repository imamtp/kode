var wCoaDOPersediaanPopup = Ext.create(dir_sys + 'sales.wCoaDOPersediaanPopup');
var wCoaDOHpPenjualanPopup = Ext.create(dir_sys + 'sales.wCoaDOHpPenjualanPopup');
// var wGridSalesOrderListDOPopup = Ext.create(dir_sys + 'sales.wGridSalesOrderListDOPopup');

var GridItemDeliveryOrder = Ext.create(dir_sys + 'sales.GridItemDeliveryOrder');
var wGridSalesOrderListDOPopup = Ext.create(dir_sys + 'sales.wGridSalesOrderListDOPopup');

Ext.define('EntryDeliveryOrder', {
    extend: 'Ext.form.Panel',
    alias: 'widget.EntryDeliveryOrder',
    id: 'EntryDeliveryOrder',
    // width: 760,
    // title: 'Detail',
    // height: 410,
    url: SITE_URL + 'production/savewo',
    bodyStyle: 'padding:5px',
    forceFit: true,
    autoScroll: true,
    fieldDefaults: {
        msgTarget: 'side',
        blankText: 'Tidak Boleh Kosong',
        labelWidth: 120,
        width: 340
    },
    bodyPadding: 5,
    width: 600,
    defaults: {
        anchor: '100%'
    },

    items: [
        {
            xtype: 'hiddenfield',
            name: 'statusform',
            id: 'statusform_woform'
        },
        {
            xtype: 'container',
            layout: 'hbox',
            items: [{
                xtype: 'container',
                flex: 1,
                layout: 'anchor',
                items: [{
                        xtype: 'textfield',
                        labelWidth: 120,
                        id: 'nojurnalDO_do',
                        fieldLabel: 'NO DO #',
                        readOnly: true,
                        emptyText: 'Autogenerated',
                    },
                    {
                        xtype: 'comboxunit',
                        valueField: 'idunit',
                        labelWidth: 120,
                        valueField: 'idunit',
                        id: 'cbUnitGridItemDeliveryOrder'
                        //                            ,multiSelect:true
                    },
                    {
                        xtype: 'textfield',
                        // anchor:'150%',
                        width: 600,
                        labelWidth: 120,
                        value: 'Sales Order',
                        id: 'memoSalesOrder_do',
                        name:'memo',
                        fieldLabel: 'Memo'
                    }
                ]
            }, {
                xtype: 'container',
                flex: 1,
                layout: 'anchor',
                items: [{
                        xtype: 'textfield',
                        labelWidth: 120,
                        id: 'no_sales_order_do',
                        fieldLabel: 'Pilih NO SO #',
                        listeners: {
                            render: function(component) {
                                component.getEl().on('click', function(event, el) {
                                    wGridSalesOrderListDOPopup.show();

                                    // storeGridSalesQuoteList.on('beforeload',function(store, operation,eOpts){
                                    //     operation.params={
                                    //                 'idunit': Ext.getCmp('idunitRequisition').getValue(),
                                    //                 'status': '1'
                                    //     };
                                    // });
                                    // Ext.getCmp('GridSalesQuoteListID').getStore().load();

                                });
                            }
                        }
                    },
                    {
                        xtype: 'textfield',
                        fieldLabel: 'Konsumen',
                        id: 'customerSalesOrder_do',
                        labelWidth: 120
                    }
                ]
            }, {
                xtype: 'container',
                flex: 1,
                layout: 'anchor',
                items: [{
                        xtype: 'datefield',
                        labelWidth: 120,
                        id: 'tanggalSalesOrder_do',
                        format: 'd/m/Y',
                        fieldLabel: 'Order Date'
                    },
                    {
                        xtype: 'textfield',
                        labelWidth: 120,
                        id: 'no_faktur_do',
                        name: 'no_faktur',
                        fieldLabel: 'No Faktur'
                    },
                    {
                        xtype:'hiddenfield',
                        name:'id_sales_order',
                        id:'id_sales_order_do'
                    },
                    {
                        xtype:'hiddenfield',
                        name:'id_tmp',
                        id:'id_tmp_do'
                    },
                    {
                        xtype:'hiddenfield',
                        name:'delivery_order_id',
                        id:'delivery_order_id_do'
                    }
                ]
            }, ]
        },

        {
            xtype: 'GridItemDeliveryOrder'
        },
        {
            xtype: 'container',
            layout: 'hbox',
            items: [{
                xtype: 'container',
                flex: 1,
                layout: 'anchor',
                items: [{
                        xtype: 'textfield',
                        labelWidth: 120,
                        name: 'driver_name',
                        id: 'driver_name_do',
                        fieldLabel: 'Nama Supir',
                    },
                    {
                        xtype: 'datefield',
                        labelWidth: 120,
                        id: 'tanggalDeliveryOrder_do',
                        name:'delivery_date',
                        format: 'd/m/Y',
                        fieldLabel: 'Tgl Pengiriman'
                    },
                    {
                        xtype: 'textfield',
                        labelWidth: 120,
                        name: 'vehicle_number',
                        id: 'vehicle_number_do',
                        fieldLabel: 'No Mobil',
                    },
                    {
                        xtype: 'textfield',
                        name: 'ship_address',
                        id: 'shipaddressSalesOrder_do',
                        labelWidth: 120,
                        width: 600,
                        fieldLabel: 'Alamat Pengiriman',
                        listeners: {
                            render: function(component) {
                                component.getEl().on('click', function(event, el) {

                                    // if (group_id == 99)
                                    // {
                                    //     var extraparams = null;
                                    // } else {
                                    //     var extraparams = 'a.idunit:'+Ext.getCmp('cbUnitGridItemDeliveryOrder').getValue();
                                    // }

                                    // var FormChooseAddress = Ext.getCmp('FormChooseAddress');
                                    // FormChooseAddress.getForm().load({
                                    //     url: SITE_URL + 'backend/loadFormData/unitcompany/1/setup',
                                    //     params: {
                                    //         extraparams: extraparams
                                    //     },
                                    //     success: function(form, action) {
                                    //         var d = Ext.decode(form.responseText);
                                    //         console.log(d.alamat)
                                    //     },
                                    //     failure: function(form, action) {
                                    //         Ext.Msg.alert("Load failed", action.result.errorMessage);
                                    //     }
                                    // });
                                    // wAddSalesOrderPopup.show();

                                });
                            }
                        }
                    },
                    {
                        xtype: 'textfield',
                        labelWidth: 120,
                        name: 'notes',
                        id: 'notes_do',
                        width: 600,
                        fieldLabel: 'Catatan'
                    }
                ]
            }, {
                xtype: 'container',
                flex: 1,
                layout: 'anchor',
                items: [
                    // {
                    //     xtype: 'fieldcontainer',
                    //     fieldLabel: 'Akun Harga Pokok Penjualan',
                    //     combineErrors: true,
                    //     msgTarget: 'side',
                    //     layout: 'hbox',
                    //     width: 570,
                    //     labelWidth: 180,
                    //     defaults: {
                    //         flex: 1,
                    //         hideLabel: true
                    //     },
                    //     items: [{
                    //         xtype: 'textfield',
                    //         width: 160,
                    //         allowBlank: false,
                    //         name: 'accnametujuan',
                    //         id: 'accname_coa_hppenjualan_do',
                    //         listeners: {
                    //             render: function(component) {
                    //                 component.getEl().on('click', function(event, el) {
                    //                     if (Ext.getCmp('cbUnitGridItemDeliveryOrder').getValue() == null) {
                    //                         Ext.Msg.alert('Perhatian', 'Unit belum dipilih');
                    //                     } else {
                    //                         wCoaDOHpPenjualanPopup.show();
                    //                         storeGridAccount.on('beforeload', function(store, operation, eOpts) {
                    //                             operation.params = {
                    //                                 'idunit': idunit,
                    //                                 'idaccounttype': '13'
                    //                             };
                    //                         });
                    //                         storeGridAccount.load();
                    //                     }
                    //                 });
                    //             }
                    //         }
                    //     }, {
                    //         xtype: 'displayfield',
                    //         id: 'accnumber_coa_hppenjualan_do',
                    //     }, {
                    //         xtype: 'hiddenfield',
                    //         name: 'idaccount',
                    //         id: 'idaccount_coa_hppenjualan_do',
                    //     }]
                    // },
                //     {
                //     xtype: 'fieldcontainer',
                //     fieldLabel: 'Akun Persediaan',
                //     combineErrors: true,
                //     msgTarget: 'side',
                //     layout: 'hbox',
                //     width: 570,
                //     labelWidth: 180,
                //     defaults: {
                //         flex: 1,
                //         hideLabel: true
                //     },
                //     items: [{
                //         xtype: 'textfield',
                //         width: 160,
                //         allowBlank: false,
                //         name: 'accnametujuan',
                //         id: 'accname_coa_persediaan_do',
                //         listeners: {
                //             render: function(component) {
                //                 component.getEl().on('click', function(event, el) {
                //                     if (Ext.getCmp('cbUnitGridItemDeliveryOrder').getValue() == null) {
                //                         Ext.Msg.alert('Perhatian', 'Unit belum dipilih');
                //                     } else {
                //                         wCoaDOPersediaanPopup.show();
                //                         storeGridAccount.on('beforeload', function(store, operation, eOpts) {
                //                             operation.params = {
                //                                 'idunit': idunit,
                //                                 'idaccounttype': '3,4,5,20'
                //                             };
                //                         });
                //                         storeGridAccount.load();
                //                     }
                //                 });
                //             }
                //         }
                //     }, {
                //         xtype: 'displayfield',
                //         id: 'accnumber_coa_persediaan_do',
                //     }, {
                //         xtype: 'hiddenfield',
                //         name: 'idaccount',
                //         id: 'idaccount_coa_persediaan_do',
                //     }]
                // },
                {
                    xtype:'comboxDeliveryOrderStatus',
                    allowBlank:false,
                    labelWidth:180,
                    id:'status_formdo',
                    name:'status'
                }
                ]
            }, {
                xtype: 'container',
                flex: 1,
                layout: 'anchor',
                items: []
            }, ]
        },
    ]
});


Ext.define(dir_sys + 'sales.WindowEntryDeliveryOrder', {
    extend: 'Ext.window.Window',
    alias: 'widget.WindowEntryDeliveryOrder',
    id: 'WindowEntryDeliveryOrder',
    title: 'Entry Delivery Order',
    header: {
        titlePosition: 2,
        titleAlign: 'center'
    },
    closable: true,
    autoDestroy: false,
    modal: true,
    closeAction: 'hide',
    //    autoWidth: true,
    width: panelW,
    height: sizeH+50,
    layout: 'fit',
    border: false,
    items: [{
        xtype: 'EntryDeliveryOrder'
    }],
    buttons: [{
        text: 'Cancel',
        handler: function() {
            // this.up('form').getForm().reset();
            Ext.getCmp('WindowEntryDeliveryOrder').hide();
        }
    }, {
        text: 'Save Delivery Order',
        id:'btnSaveDo',
        handler: function(button, event, options) {

            if (validasiQtyKirimDO()>0) {

            //     if (validasiStockKirim()) {

                    if (validasiFormDO()) {
                        var GridItemDeliveryOrderStore = Ext.getCmp('GridItemDeliveryOrder').getStore();
                        var json = Ext.encode(Ext.pluck(GridItemDeliveryOrderStore.data.items, 'data'));
                        // var formData = Ext.getCmp('EntryDeliveryOrder').getForm().getValues();
                         var win = button.up('window');
                        var formPanel = win.down('form');

                        Ext.Ajax.request({
                            url: SITE_URL + 'sales/saveDeliveryOrder2',
                            method: 'POST',
                            // data: formData,
                            params: {
                                no_do: Ext.getCmp('nojurnalDO_do').getValue(),
                                form_data: Ext.JSON.encode(formPanel.getValues()),
                                datagrid: json
                            },
                            success: function(form, action) {

                                var d = Ext.decode(form.responseText);
                                if (!d.success) {
                                    Ext.Msg.alert('Peringatan', d.message);
                                } else {
                                    Ext.Msg.alert('Success', d.message);
                                    Ext.getCmp('WindowEntryDeliveryOrder').hide();
                                }

                                Ext.getCmp('deliveryOrderGrid').getStore().load();
                            },
                            failure: function(form, action) {
                                Ext.Msg.alert('Failed', action.result ? action.result.message : 'No response');
                            }
                        });
                    }
            //     }
            // }
        } else {
            Ext.Msg.alert('Failed', 'Tentukan barang yang akan dikirim');
        }
    }
    }]
});


function validasiFormDO() {
    //    alert(Ext.getCmp('comboxcurrencySalesOrder').getValue());   

    if (Ext.getCmp('nojurnalDO_do').getValue() == null) {
        Ext.Msg.alert('Failed', 'Tentukan nomor DO');
    }   else if (Ext.getCmp('no_faktur_do').getValue() == '') {
        Ext.Msg.alert('Failed', 'Tentukan no faktur');
    }  else if (Ext.getCmp('shipaddressSalesOrder_do').getValue() == '') {
        Ext.Msg.alert('Failed', 'Tentukan alamat pengiriman');
    } else if (Ext.getCmp('tanggalDeliveryOrder_do').getValue() == null) {
        Ext.Msg.alert('Failed', 'Masukkan tanggal pengiriman');
    } else if (Ext.getCmp('shipaddressSalesOrder_do').getValue() == null) {
        Ext.Msg.alert('Failed', 'Tentukan alamat pengiriman');
    } else {
        return true;
    }
}

function validasiQtyKirimDO() {
    var qty_kirim = 0;
    var GridItemDeliveryOrderStore = Ext.getCmp('GridItemDeliveryOrder').getStore();
    Ext.each(GridItemDeliveryOrderStore.data.items, function(obj, i) {
        console.log('obj.data.qtysisakirim:' + obj.data.qtysisakirim);
        qty_kirim+= obj.data.qty_kirim*1;
    });
    return qty_kirim;
}